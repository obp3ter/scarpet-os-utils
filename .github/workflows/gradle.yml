# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle


name: Publish Release

on:
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
        restore-keys: ${{ runner.os }}-gradle
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle and publish to Modrinth
      run: ./gradlew build publishModrinth -PpublishModrinthVersion=${{ github.event.release.tag_name }} -PpublishModrinthSecret=${{ secrets.MODRINTH_API_TOKEN }} -PpublishModrinthChangelog=${{ github.event.release.body }}

    - name: Find correct JAR
      id: findjar
      run: |
        output="$(find build/libs/ ! -name "*-dev.jar" ! -name "*-sources.jar" -type f -printf "%f\n")"
        echo "::set-output name=jarname::$output"
    - name: Split jar name
      uses: jungwinter/split@v1
      id: split
      with:
        msg: ${{ steps.findjar.outputs.jarname }}
        separator: '-'
    - name: Split version
      uses: jungwinter/split@v1
      id: splitVersion
      with:
        msg: ${{ steps.split.outputs._3 }}
        separator: '.'
    - name: Save build artifacts in the action
      uses: actions/upload-artifact@v2
      with:
        name: Artifacts for ${{ matrix.branch }}
        path: build/libs
    - name: Upload to the Github release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/libs/${{ steps.findjar.outputs.jarname }}
        asset_name: ${{ steps.findjar.outputs.jarname }}
        asset_content_type: application/java-archive
    - name: Upload to Curseforge
      uses: itsmeow/curseforge-upload@v3
      with:
        token: ${{ secrets.CURSEFORGE_API_TOKEN }}
        project_id: 439706
        game_endpoint: minecraft
        file_path: build/libs/${{ steps.findjar.outputs.jarname }}
        changelog_type: markdown
        changelog: ${{ github.event.release.body }}
        display_name: Scarpet Os Utils ${{ github.event.release.tag_name }}
        game_versions: 7499, 4458, ${{ join(steps.splitVersion.outputs,'-') }}
        release_type: release
